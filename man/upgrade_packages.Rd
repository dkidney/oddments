% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/upgrade_packages.R
\name{upgrade_packages}
\alias{upgrade_packages}
\title{Upgrade packages}
\usage{
upgrade_packages(pkgs = NULL, lib = .libPaths()[1],
  repos = getOption("repos"), type = .Platform$pkgType,
  dependencies = c("Depends", "Imports", "LinkingTo"),
  check_source = FALSE)
}
\arguments{
\item{pkgs}{character vector giving the names of the packages to upgrade - if
\code{NULL} then all currently installed packages will be used}

\item{lib}{string giving the the library directory in which to install the packages}

\item{repos}{string giving the URL of the repositories to use}

\item{type}{string giving the type of package to download and install (see Details)}

\item{dependencies}{character vector giving the types of dependencies to
install/update, a subset of c("Depends", "Imports", "LinkingTo", "Suggests",
"Enhances")}

\item{check_source}{if \code{TRUE} check to see if there are later versions available
from source, but don't install/update (ignored if \code{type = "source"} or
\code{"both"})}
}
\description{
\itemize{
\item Installs any packages in \code{pkgs} that are not already installed
\item Updates any packages in \code{pkgs} that are installed but out-of-date.
}
}
\details{
Note that using \code{type=.Platform$pkgType} will only install binary versions (e.g.
if using OSX 10.13 or higher the type will probably be \code{"mac.binary.el-capitan"}).
Sometimes there are more up-to-date source versions available, in which case you will
either need to change the arguement to \code{type=getOption("pkgType")} or
\code{type="source"}, or update those packages manually (e.g. using the 'Update
packages' facility within RStudio).
}
\examples{
\dontrun{

upgrade_packages("devtools")
upgrade_packages("tidyverse")
upgrade_packages("tidymodels")
}
}
